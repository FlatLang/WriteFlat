package "novex/writer/nova/nodes/functions"

import "novex/astro/SyntaxMessage"
import "novex/astro/InvalidParseException"
import "novex/astro/tree/SyntaxTree"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/Type"
import "novex/astro/tree/nodes/variables/InstanceDeclaration"
import "novex/astro/tree/nodes/variables/VariableDeclaration"
import "novex/astro/tree/nodes/generics/GenericParameter"
import "novex/astro/tree/nodes/generics/GenericCompatible"
import "novex/astro/util/Location"

import "novex/astro/util/CompilerStringFunctions"

class FunctionDeclarationWriter extends InstanceDeclarationWriter implements CallableFunctionWriter, GenericCompatibleWriter {
    [Override]
    public writeAnnotationSeparator() => "\n"
    
    public writeReturnType() => type ? " -> #type" : ""
    
    public writeHeader() =>
        "#name".replace(/\s+/, " ").trim() +
        writeGenericParameters() +
        "#parameterList.toNova()" +
        writeReturnType()
    
    public writeNova() => writeHeader()
}