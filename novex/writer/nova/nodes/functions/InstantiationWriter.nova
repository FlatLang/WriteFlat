package "novex/writer/nova/nodes/functions"

import "nova/io/OutputStream"
import "nova/io/StringBuilder"
import "novex/astro/SyntaxErrorException"
import "novex/astro/InvalidParseException"
import "novex/astro/util/Location"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/Type"
import "novex/astro/tree/nodes/NodeList"
import "novex/astro/tree/nodes/functions/FunctionDeclaration"
import "novex/astro/tree/nodes/variables/VariableDeclaration"

import "novex/astro/util/CompilerStringFunctions"

/// @FunctionCall extension that represents 
///
/// author: Braden Steffaniak
/// since: 
/// version: 
class InstantiationWriter extends FunctionCallWriter {
    public writeObjectNotation(OutputStream writer = new StringBuilder()) =>
        objectNotation ?
            writer.write(" " + objectNotation.toNova()) :
            writer
    
    public writeNova(OutputStream writer = new StringBuilder()) => writer.write("new #super.writeNova()")
}