package "flat/writer/nova/nodes/functions"

import "nova/io/OutputStream"
import "nova/io/StringBuilder"
import "flat/astro/SyntaxErrorException"
import "flat/astro/InvalidParseException"
import "flat/astro/util/Location"
import "flat/astro/tree/nodes/Node"
import "flat/astro/tree/nodes/Type"
import "flat/astro/tree/nodes/NodeList"
import "flat/astro/tree/nodes/functions/FunctionDeclaration"
import "flat/astro/tree/nodes/variables/VariableDeclaration"

import "flat/astro/util/CompilerStringFunctions"

/// @FunctionCall extension that represents
///
/// author: Braden Steffaniak
/// since:
/// version:
class InstantiationWriter {
    public writeObjectNotation(OutputStream writer = new StringBuilder()) =>
        objectNotation ?
            writer.write(" " + objectNotation.toNova()) :
            writer

    public writeNova(OutputStream writer = new StringBuilder()) => writer.write("new #super.writeNova()")
}