package "novex/writer/nova/nodes/functions/closures"

import "nova/io/OutputStream"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/Type"
import "novex/astro/tree/nodes/Value"
import "novex/astro/tree/nodes/functions/Parameter"
import "novex/astro/tree/nodes/functions/ParameterList"
import "novex/astro/tree/nodes/functions/CallableFunction"
import "novex/astro/tree/nodes/generics/GenericParameter"
import "novex/astro/util/Location"

import "novex/astro/util/CompilerStringFunctions"

class ClosureDeclarationWriter extends ParameterWriter implements CallableFunctionWriter {
    public writeType() =>
        type ?
            "-> #type.toNova()" :
            ""
    
    public writeNova() => ("#{name}#parameterList.toNova() " + writeType()).trim() + writeDefaultValue()
}