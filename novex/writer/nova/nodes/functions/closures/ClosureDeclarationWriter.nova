package "flat/writer/nova/nodes/functions/closures"

import "nova/io/OutputStream"
import "nova/io/StringBuilder"
import "flat/astro/tree/nodes/Node"
import "flat/astro/tree/nodes/Type"
import "flat/astro/tree/nodes/Value"
import "flat/astro/tree/nodes/functions/Parameter"
import "flat/astro/tree/nodes/functions/ParameterList"
import "flat/astro/tree/nodes/functions/CallableFunction"
import "flat/astro/tree/nodes/generics/GenericParameter"
import "flat/astro/util/Location"

import "flat/astro/util/CompilerStringFunctions"

class ClosureDeclarationWriter {
    public writeType(OutputStream writer = new StringBuilder()) =>
        type ?
            writer.write("-> #type.toNova()") :
            writer

    public writeNova(OutputStream writer = new StringBuilder()) => writer {
        writer.write(("#{name}#parameterList.toNova() " + writeType()).trim())
        writeDefaultValue(writer)
    }
}