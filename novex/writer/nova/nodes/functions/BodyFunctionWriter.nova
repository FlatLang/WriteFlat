package "novex/writer/nova/nodes/functions"

import "novex/astro/InvalidParseException"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/ScopeDeclaration"
import "novex/astro/tree/nodes/Type"
import "novex/astro/tree/nodes/Scope"
import "novex/astro/tree/nodes/Return"
import "novex/astro/tree/nodes/Value"
import "novex/astro/util/Location"
import "novex/astro/SyntaxMessage"

import "novex/astro/util/CompilerStringFunctions"

class BodyFunctionWriter extends FunctionDeclarationWriter implements ScopeDeclarationWriter {
    public writeReturnType() =>
        implicitType ?
            "" :
            super.writeReturnType()
    
    writeInlineBody() =>
        "=> " + inlineBody.toNova() +
            (scope.children.count > 0 ?
                " " + scope.toNova() :
                "")
    
    public writeBody() =>
        " " + (inlineBody ?
            writeInlineBody() :
            scope.toNova())
    
    public writeNova() =>
        writeHeader() + writeBody()
}