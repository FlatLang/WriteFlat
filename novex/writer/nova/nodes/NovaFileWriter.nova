package "novex/writer/nova/nodes"

import "nova/io/File"
import "nova/io/FileReader"
import "nova/datastruct/list/Stack"

import "novex/astro/util/Location"
import "novex/astro/SyntaxMessage"
import "novex/astro/tree/StatementIterator"
import "novex/astro/tree/nodes/annotations/Annotation"
import "novex/astro/tree/nodes/functions/closures/ClosureContext"
import "novex/astro/tree/nodes/functions/closures/ClosureDeclaration"

class NovaFileWriter extends NodeWriter {
    public writePackageDeclaration() =>
        packageDeclaration ?
            packageDeclaration.toNova() + "\n\n" :
            ""
    
    public writeImports() =>
        (let userImports = imports.filter({ _.userAdded })).count > 0 ?
            userImports.map({ _.toNova() + "\n" }).join() + "\n" :
            ""
    
    public toNova() =>
        writePackageDeclaration() +
        writeImports() +
        classes.map({ _.toNova() }).join("\n")
    
    public toString() => file.name
}